package hola;

import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.File;
import javax.imageio.ImageIO;

public class PixelArtUno {

	 static final int width = 590;
     static final int height = 730;
    private static final int PIXEL_SIZE = 45;

    public static void paint(Graphics2D g, BufferedImage image, int width, int height) {
        // Definición de colores
        Color azul = new Color(11, 33, 219, 255);
        Color caca = new Color(153, 77, 0, 255);
        Color rojo = new Color(254, 51, 0, 255);
        Color carne = new Color(255, 204, 153, 255);
        Color cafe = new Color(106, 64, 18, 255);
        Color ama = new Color(255, 255, 1, 255);
        Color blanco = Color.WHITE;
        Color negro = Color.BLACK;

        // Fondo
        drawBackground(g, width, blanco);

        // Playera
        drawHorizontalLine(g, 5, 6, 10, azul);
        putPixel(g, 4, 10, ama);
        putPixel(g, 7, 10, ama);
        putPixel(g, 3, 10, azul);
        putPixel(g, 8, 10, azul);
        drawVerticalLine(g, 7, 9, 4, azul);
        drawVerticalLine(g, 8, 9, 7, azul);
        drawHorizontalLine(g, 5, 6, 9, azul);
        twoHor(g, 3, 8, 11, azul);
        twoHor(g, 7, 9, 12, azul);
        twoHor(g, 2, 4, 12, azul);
        twoHor(g, 5, 6, 7, rojo);
        twoHor(g, 8, 10, 8, rojo);
        twoHor(g, 1, 3, 8, rojo);
        drawHorizontalLine(g, 2, 3, 7, rojo);
        drawHorizontalLine(g, 6, 8, 7, rojo);
        putPixel(g, 2, 10, rojo);
        putPixel(g, 9, 10, rojo);

        putPixel(g, 0, 9, rojo);
        putPixel(g, 11, 9, rojo);
        twoVer(g, 10, 12, 0, carne);
        twoVer(g, 10, 12, 10, carne);
        putPixel(g, 2, 11, carne);
        putPixel(g, 9, 11, carne);

        // Zapatos
        twoHor(g, 1, 3, 14, cafe);
        twoHor(g, 8, 10, 14, cafe);
        putPixel(g, 11, 15, cafe);
        putPixel(g, 0, 15, cafe);

        // Sombrero
        drawHorizontalLine(g, 3, 8, 0, rojo);
        drawHorizontalLine(g, 2, 9, 1, rojo);
        drawHorizontalLine(g,2, 11,1, rojo);

        // Cara
        drawHorizontalLine(g, 5, 9, 2, carne);
        drawHorizontalLine(g, 2, 4, 2, caca);
        drawVerticalLine(g, 3, 5, 1, caca);
        putPixel(g, 2, 5, caca);
        drawVerticalLine(g, 3, 4, 3, caca);
        putPixel(g, 4, 4, caca);
        drawVerticalLine(g, 3, 4, 2, carne);
        drawHorizontalLine(g, 4, 11, 3, carne);
        drawHorizontalLine(g, 5, 12, 4, carne);
        drawHorizontalLine(g, 3, 11, 5, carne);
        drawHorizontalLine(g, 3, 10, 6, carne);
        drawVerticalLine(g, 2, 3, 8, negro);
        drawHorizontalLine(g, 8, 11, 5, negro);
        putPixel(g, 9, 4, negro);

        // Cuadrícula
        drawSquareGrid(g, height, negro);

        // Guardar la imagen
        try {
            ImageIO.write(image, "jpg", new File("PArte1.jpg"));
            System.out.println("EXITO !!!");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private static void drawVerticalLine(Graphics2D g, int a, int b, int x, Color c) {
        for (int i = a; i <= b; i++) {
            g.setColor(c);
            g.fillRect(x * PIXEL_SIZE, i * PIXEL_SIZE, PIXEL_SIZE, PIXEL_SIZE);
        }
    }

    private static void drawHorizontalLine(Graphics2D g, int a, int b, int y, Color c) {
        for (int i = a; i <= b; i++) {
            g.setColor(c);
            g.fillRect(i * PIXEL_SIZE, y * PIXEL_SIZE, PIXEL_SIZE, PIXEL_SIZE);
        }
    }

    private static void putPixel(Graphics2D g, int x, int y, Color c) {
        g.setColor(c);
        g.fillRect(x * PIXEL_SIZE, y * PIXEL_SIZE, PIXEL_SIZE, PIXEL_SIZE);
    }

    private static void twoHor(Graphics2D g, int a, int b, int y, Color c) {
        for (int i = a; i <= b; i++) {
            g.setColor(c);
            g.fillRect(i * PIXEL_SIZE, y * PIXEL_SIZE, PIXEL_SIZE, PIXEL_SIZE);
            g.fillRect(i * PIXEL_SIZE, (y + 1) * PIXEL_SIZE, PIXEL_SIZE, PIXEL_SIZE);
        }
    }

    private static void twoVer(Graphics2D g, int a, int b, int x, Color c) {
        for (int i = a; i <= b; i++) {
            g.setColor(c);
            g.fillRect(x * PIXEL_SIZE, i * PIXEL_SIZE, PIXEL_SIZE, PIXEL_SIZE);
            g.fillRect((x + 1) * PIXEL_SIZE, i * PIXEL_SIZE, PIXEL_SIZE, PIXEL_SIZE);
        }
    }

    private static void drawSquareGrid(Graphics2D g, int size, Color c) {
        for (int i = 0; i < size; i++) {
            for (int j = 0; j < size; j++) {
                g.setColor(c);
                g.drawRect(i * PIXEL_SIZE, j * PIXEL_SIZE, PIXEL_SIZE, PIXEL_SIZE);
            }
        }
    }

    private static void drawBackground(Graphics2D g, int size, Color c) {
        for (int i = 0; i < size; i++) {
            for (int j = 0; j < size; j++) {
                g.setColor(c);
                g.fillRect(i * PIXEL_SIZE, j * PIXEL_SIZE, PIXEL_SIZE, PIXEL_SIZE);
            }
        }
    }
}
